{
    "name": "ocnpro/php-qa",
    "description": "A composer plugin that enables source code quality checks with GrumPHP and Prettier.",
    "type": "composer-plugin",
    "autoload": {
        "psr-4": {
            "PhpQa\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PhpQaTest\\": "test"
        }
    },
    "authors": [
        {
            "name": "ocnpro",
            "email": "orane.bacchieri@gmail.com"
        }
    ],
    "require": {
        "php": "^7.0",
        "ext-json": "*",
        "composer-plugin-api": "~2.0",
        "amphp/amp": "^2.6",
        "amphp/parallel": "^1.4",
        "amphp/parallel-functions": "^1.1",
        "doctrine/collections": "^1.6.8 || ^2.0",
        "gitonomy/gitlib": "^1.3",
        "laravel/serializable-closure": "^1.1",
        "monolog/monolog": "^2.0 || ^3.0",
        "ondram/ci-detector": "^4.0",
        "psr/container": "^1.1 || ^2.0",
        "seld/jsonlint": "~1.8",
        "symfony/config": "~5.4 || ~6.0",
        "symfony/console": "~5.4 || ~6.0",
        "symfony/dependency-injection": "~5.4 || ~6.0",
        "symfony/dotenv": "~5.4 || ~6.0",
        "symfony/event-dispatcher": "~5.4 || ~6.0",
        "symfony/filesystem": "~5.4 || ~6.0",
        "symfony/finder": "~5.4 || ~6.0",
        "symfony/options-resolver": "~5.4 || ~6.0",
        "symfony/process": "~5.4 || ~6.0",
        "symfony/yaml": "~5.4 || ~6.0"
    },
    "require-dev": {
        "amphp/sync": "^v1.4",
        "brianium/paratest": "^6.4",
        "composer/composer": "^2.2.6",
        "nikic/php-parser": "~4.13",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpspec/phpspec": "^7.2",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpunit/phpunit": "^9.5.13"
    },
    "suggest": {
        "atoum/atoum": "Lets PhpQa run your unit tests.",
        "behat/behat": "Lets PhpQa validate your project features.",
        "brianium/paratest": "Lets PhpQa run PHPUnit in parallel.",
        "codeception/codeception": "Lets PhpQa run your project's full stack tests",
        "consolidation/robo": "Lets PhpQa run your automated PHP tasks.",
        "designsecurity/progpilot": "Lets PhpQa be sure that there are no vulnerabilities in your code.",
        "doctrine/orm": "Lets PhpQa validate your Doctrine mapping files.",
        "enlightn/security-checker": "Lets PhpQa be sure that there are no known security issues.",
        "ergebnis/composer-normalize": "Lets PhpQa tidy and normalize your composer.json file.",
        "friendsofphp/php-cs-fixer": "Lets PhpQa automatically fix your codestyle.",
        "friendsoftwig/twigcs": "Lets PhpQa check Twig coding standard.",
        "infection/infection": "Lets PhpQa evaluate the quality your unit tests",
        "maglnet/composer-require-checker": "Lets PhpQa analyze composer dependencies.",
        "malukenho/kawaii-gherkin": "Lets PhpQa lint your Gherkin files.",
        "nette/tester": "Lets PhpQa run your unit tests with nette tester.",
        "nikic/php-parser": "Lets PhpQa run static analyses through your PHP files.",
        "pestphp/pest": "Lets PhpQa run your unit test with Pest PHP",
        "phan/phan": "Lets PhpQa unleash a static analyzer on your code",
        "phing/phing": "Lets PhpQa run your automated PHP tasks.",
        "php-parallel-lint/php-parallel-lint": "Lets PhpQa quickly lint your entire code base.",
        "phparkitect/phparkitect": "Let PhpQa keep your codebase coherent and solid, by permitting to add some architectural constraint check to your workflow.",
        "phpmd/phpmd": "Lets PhpQa sort out the mess in your code",
        "phpspec/phpspec": "Lets PhpQa spec your code.",
        "phpstan/phpstan": "Lets PhpQa discover bugs in your code without running it.",
        "phpunit/phpunit": "Lets PhpQa run your unit tests.",
        "povils/phpmnd": "Lets PhpQa help you detect magic numbers in PHP code.",
        "rector/rector ": "Lets PhpQa instantly upgrade and automatically refactor your PHP code.",
        "roave/security-advisories": "Lets PhpQa be sure that there are no known security issues.",
        "sebastian/phpcpd": "Lets PhpQa find duplicated code.",
        "squizlabs/php_codesniffer": "Lets PhpQa sniff on your code.",
        "sstalle/php7cc": "Lets PhpQa check PHP 5.3 - 5.6 code compatibility with PHP 7.",
        "symfony/phpunit-bridge": "Lets PhpQa run your unit tests with the phpunit-bridge of Symfony.",
        "symplify/easy-coding-standard": "Lets PhpQa check coding standard.",
        "vimeo/psalm": "Lets PhpQa discover errors in your code without running it."
    },
    "bin": [
        "bin/grumphp"
    ],
    "config": {
        "sort-packages": true
    },
    "extra": {
        "class": "PhpQa\\Composer\\GrumPHPPlugin"
    },
    "scripts": {
        "post-install-cmd": [
            "PhpQa\\Composer\\DevelopmentIntegrator::integrate"
        ],
        "post-update-cmd": [
            "PhpQa\\Composer\\DevelopmentIntegrator::integrate"
        ]
    },
    "license": "MIT"
}
